/**
 * # NodeAlreadyExistsError
 *
 * This error is thrown when trying to create a node with the same identity as an existing node.
 *
 * @category Errors
 */
export declare class NodeAlreadyExistsError<T> extends Error {
    newNode: T;
    oldNode: T;
    identity: string;
    constructor(newNode: T, oldNode: T, identity: string);
}
/**
 * # NodeDoesntExistError
 * This error is thrown when trying to access a node in a graph by it's identity when that node doesn't exist
 *
 * @category Errors
 */
export declare class NodeDoesntExistError<T> extends Error {
    identity: string;
    constructor(identity: string);
}
/**
 * # CycleError
 *
 * This error is thrown when attempting to create or update a Directed Acyclic Graph that contains a cycle.
 *
 * @category Errors
 */
export declare class CycleError extends Error {
    constructor(message: string);
}
